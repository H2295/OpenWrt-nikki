#!/usr/bin/ucode

'use strict';

import { access, popen, writefile } from 'fs';
import { get_users, get_groups, get_cgroups } from '/etc/nikkibox/ucode/include.uc';

const methods = {
	version: {
		call: function() {
			let process;
			let app = '';
			if (system('command -v opkg') == 0) {
				process = popen('opkg list-installed luci-app-nikkibox | cut -d " " -f 3');
				if (process) {
					app = trim(process.read('all'));
					process.close();
				}
			} else if (system('command -v apk') == 0) {
				process = popen('apk list -I luci-app-nikkibox | cut -d " " -f 1 | cut -d "-" -f 4');
				if (process) {
					app = trim(process.read('all'));
					process.close();
				}
			}
			let core = '';
			process = popen('sing-box version | grep sing-box | cut -d " " -f 3');
			if (process) {
				core = trim(process.read('all'));
				process.close();
			}
			return { app: app, core: core };
		}
	},
	update_subscription: {
		args: { section_id: 'section_id' },
		call: function(req) {
			let success = false;
			const section_id = req.args?.section_id;
			if (section_id) {
				success = system(['service', 'nikkibox', 'update_subscription', section_id]) == 0;
			}
			return { success: success };
		}
	},
	get_identifiers: {
		call: function() {
			const users = filter(get_users(), (x) => x != '');
			const groups = filter(get_groups(), (x) => x != '');
			const cgroups = filter(get_cgroups(), (x) => x != '' && index(x, 'services/nikkibox') < 0);
			return { users: users, groups: groups, cgroups: cgroups };
		}
	},
	upgrade: {
		call: function() {
			const success = system('/etc/nikkibox/scripts/updatecore.sh > /var/log/nikkibox/update.log &') == 0;
			return { success: success };
		}
	}
};

return { 'luci.nikkibox': methods };
